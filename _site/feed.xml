<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>坚果</title>
    <description>Roon was an excellent service, with a beautiful understated design. Roon was eventually acquired by Ghost, who awesomely chose to open source the theme. &lt;br/&gt;This is my Jekyll port of the Roon theme
</description>
    <link>http://pandaqr.github.io/</link>
    <atom:link href="http://pandaqr.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 12 Jan 2016 22:05:14 +0800</pubDate>
    <lastBuildDate>Tue, 12 Jan 2016 22:05:14 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>The Guide to Mockups</title>
        <description>&lt;p&gt;最近在看Uxpin上的一系列电子书，犹如发现宝库一般，一堆一堆的。
那就先从最基本的Mockup，Wireframe以及prototype开始吧&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://studio.uxpin.com/ebooks/guide-to-mockups/&quot;&gt;&lt;strong&gt;The Guide to Mockups&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;基本就是介绍了Mockup，wireframe ,prototype 之间的区别与概念。&lt;/p&gt;

&lt;p&gt;Wireframe是Skeleton骨架，而Mockup就是Skin&lt;/p&gt;

&lt;p&gt;因此这三者之间的进展顺序应该是 wireframe&amp;gt;mockup&amp;gt;prototype&lt;/p&gt;

&lt;p&gt;通常mockup 的方式可以在纸上直接进行，可能比较耗时，但可以以激起设计师的灵感。&lt;/p&gt;

&lt;p&gt;也可以在电脑上做Mockup,工具可以用PS和Sketch，但这就是高保真Mock up了。还有一种叫做中保真Mock ups.&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;高保真的好处&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;接近最终成品&lt;/li&gt;
  &lt;li&gt;让客户提前看到完成品的样式&lt;/li&gt;
  &lt;li&gt;提前决定字体，颜色，幕布等，不用等到最后prototype再决定&lt;/li&gt;
  &lt;li&gt;如又要修改的会比较方便，而不是等到prototype出来了再去改什么代码，成本太高。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mockups&quot;&gt;为何不支持Mockups&lt;/h2&gt;
&lt;p&gt;当然也有人反对Mockup，认为其设计的花里胡哨最终可能无法良好的转化为代码。因此提倡直接在代码上画。&lt;/p&gt;

&lt;p&gt;但问题是:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;代码限制了想象力&lt;/li&gt;
  &lt;li&gt;无法实验多种效果&lt;/li&gt;
  &lt;li&gt;修改成本高&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mockups-1&quot;&gt;Mockups的作用&lt;/h2&gt;

&lt;p&gt;其实Mock up就是设计同程序之间的一个衔接，在设计的时候要注意的细节有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;命名，同程序员商量命名方式能直接在Xcode上直接使用&lt;/li&gt;
  &lt;li&gt;和程序员商量设计方案的可信性，不要变成飞机稿&lt;/li&gt;
  &lt;li&gt;给不同平台设计的时候一定要遵循其平台特征&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在做Mock up的时候也一定要添加Notes，其也能通过颜色的变化显示某种交互的 方式，比如按钮按下去就从白色变成了红色。&lt;/p&gt;

&lt;p&gt;及早的同客户沟通，打成共识，将设计的主导权掌握在自己的手上。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;访问者浏览习惯&lt;/h2&gt;

&lt;p&gt;关于网页设计布局需要了解访问者的浏览习惯，我们可以回想一下自己浏览网站的习惯，通常我们是不会去认认真真的看文章的每一个字的，我们用的方式基本都是扫视。&lt;/p&gt;

&lt;p&gt;调查实验也发现人们有两种浏览网页的方式，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nngroup.com/articles/f-shaped-pattern-reading-web-content/&quot;&gt;F-Pattern&lt;/a&gt; (for text-heavy content)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://webdesign.tutsplus.com/articles/understanding-the-z-layout-in-web-design--webdesign-28&quot;&gt;Z-Pattern&lt;/a&gt; (for general content).&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 02 Jan 2016 20:12:12 +0800</pubDate>
        <link>http://pandaqr.github.io/2016/01/02/the-guide-to-mockups.html</link>
        <guid isPermaLink="true">http://pandaqr.github.io/2016/01/02/the-guide-to-mockups.html</guid>
        
        
      </item>
    
      <item>
        <title>设计心理学笔记</title>
        <description>&lt;p&gt;作为学设计必须要看的书之一，《设计心理学1-日常心里学》真的是一本教科书般的存在，是真的很枯燥吧，好像不至于，至少我开始看的时候居然有点津津有味，好变态啊。 
其实整本书偏理论，学习设计最最重要的不是工具怎么用，会画，会临摹成千上万幅的作品，还是不如好好的设计，好好的去创作属于自己的作品。设计也并非艺术，好的设计当然可以成为艺术，但设计更重要的是其背后的逻辑，思维以及原理。&lt;/p&gt;

&lt;h2 id=&quot;the-psychopathology-of-everyday-things&quot;&gt;一， 日用品心理学 （The Psychopathology of Everyday Things)&lt;/h2&gt;

&lt;h3 id=&quot;section&quot;&gt;好设计的两个重要特征：&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;可视性（discoverability)：所设计的产品能不能让用户明白怎样操作是合理的。&lt;/li&gt;
  &lt;li&gt;易通性(understanding)：所有设计的意图是什么，产品的预设用户是什么，所有不同的控制和装置起什么作用。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-1&quot;&gt;书中关注的三大设计的领域&lt;/h3&gt;
&lt;p&gt;设计关注物品是如何运转，如何操控，以及人和技术之间互动的机理。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;工业设计：是一种专业的服务，为使用者和生产者双方的利益而创造和开发产品与系统的概念和规范，旨在优化功能，价值和外观。&lt;/li&gt;
  &lt;li&gt;交互设计：重点关注人与技术的互动。&lt;/li&gt;
  &lt;li&gt;体验设计：设计产品，流程，服务，以及时间和环境的实践，注重关注整体体验的质量和愉悦感&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-2&quot;&gt;以人为本的设计&lt;/h3&gt;

&lt;p&gt;以人为本的设计理念意味着设计以充分了解和满足用户的需求为基础。
以人为本的设计就是尽可能的避免限定的问题，然后不断反复验证，寻找问题的真相。解决方法就是快速测试不同的概念，每次测试后都有所改进，从而找到问题梭子。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;交互设计的基本原则&lt;/h3&gt;

&lt;p&gt;1） 示能（affordances）：&lt;/p&gt;

&lt;p&gt;指一人无力对象鱼人之间的关系（无论是动物还是人类，甚至机器和机器人，它们之间发生的任何交互作用）
示能是物品的特性与决定物品预设用途的主题的能力之间的关系。 
如果示能和反示能不能够被察觉到，就需要标识出来。
示能是存在的，即使他们是不可见的。对于设计师来说示能得可见性至关重要：可见的示能对操控提供了有力的线索。
不需要标签或说明书的帮助，预设用途（ Perceived affordances)帮助人们了解采取什么行动来操作。 
我们把示能得符号提示功能叫做意符。&lt;/p&gt;

&lt;p&gt;2） 意符（Signifiers)&lt;/p&gt;

&lt;p&gt;示能决定可能进行哪些操作。
意符则点明操作的位置。
示能解释了世界上作为主题的人，动物或机器如何与其他东西进行互动的可能性。一些示能是可感知的，其他则是不可见的。
意符是信号。一些意符是生活中得符号，标签和图样。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;示能是人和环境之间可能的互动，有些是可见的有些不是。&lt;/li&gt;
  &lt;li&gt;预设的用途经常表现为意符，但经常模棱两可。&lt;/li&gt;
  &lt;li&gt;意符是一种提示，特别告诉用户可以采取什么行为，以及应该怎么操作。 意符必须是可感知的，否则它们不起作用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3） 映射（Mapping）
映射表示两组实物要素之间的关系。
当一系列可能的操作是可见的，当控制和显示契合自然映射时，设备就会容易使用。&lt;/p&gt;

&lt;p&gt;4） 反馈（Feedback)
反馈- 沟通行动的结果
反馈必须是即时的。
过多的反馈可能比过少的反馈更加恼人。
反馈需要精心策划，需要以一种不显著的方式确认所以的操作。&lt;/p&gt;

&lt;p&gt;5） 概念模型（Conceptual Models)
概念模型通常是高度简化的说明，告诉你事物是如何工作的。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;系统映像&lt;/h3&gt;
&lt;p&gt;我们把提供给用户的使用信息组合叫做“系统映像”&lt;/p&gt;

&lt;p&gt;设计师的概念模型的设计师观看，感受和操作产品时的想法。&lt;/p&gt;

&lt;p&gt;系统映像来自其物理结构（包括文档）。通过与产品和系统映像的互动产生了用户的心理模型。&lt;/p&gt;

&lt;p&gt;设计是期望用户的模型与自己的模型完全相同，但是因为他们不能直接同用户沟通，沟通的重担就转移到系统映像上。&lt;/p&gt;

&lt;p&gt;良好的概念模型是产品易于理解，令人愉悦的关键：良好的沟通是建立良好的概念模型的关键。&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;二， 日常行为心理学&lt;/h2&gt;

&lt;h3 id=&quot;section-6&quot;&gt;用户使用物品时，面对的两个心理鸿沟：&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;执行的鸿沟 （用户试图弄清楚如何操作）&lt;/li&gt;
  &lt;li&gt;评估的鸿沟 （试图弄清楚操作的结果）
&lt;strong&gt;设计师的作用是帮助使用者消除这两个鸿沟&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-7&quot;&gt;如何消除这个心理鸿沟&lt;/h4&gt;
&lt;p&gt;使用意符，约束，映射和概念模型来消除执行的鸿沟，用犯规和概念模型来消除评价的鸿沟。 
### 行动的七个阶段&lt;/p&gt;

&lt;h4 id=&quot;section-8&quot;&gt;行动有两个步骤：&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;执行动作&lt;/li&gt;
  &lt;li&gt;评估结果，然后给出解释。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-9&quot;&gt;行动的七个阶段（一个是目标，三个执行步骤，和三个评估步骤）&lt;/h4&gt;
&lt;p&gt;执行和评估需要达成共识：事物如何工作以及产生结果是否一致，执行和评估会影响我们的情绪状态。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;目标（确立意图）&lt;/li&gt;
  &lt;li&gt;计划（确定方案）&lt;/li&gt;
  &lt;li&gt;确认（行动顺序）&lt;/li&gt;
  &lt;li&gt;执行（实施行动）&lt;/li&gt;
  &lt;li&gt;感知（外部世界的状态）&lt;/li&gt;
  &lt;li&gt;诠释 (知觉作用）&lt;/li&gt;
  &lt;li&gt;对比（目标与结果）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;驱动型的行动&lt;/strong&gt;
行动发端于一个新的目标，即从顶部开始。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;机会主义&lt;/strong&gt;
对于多日常任务来说，目标和意图并不明确。机会主义是指充分利用形势的行为。&lt;/p&gt;

&lt;h3 id=&quot;section-10&quot;&gt;人的思想：潜意识主导&lt;/h3&gt;

&lt;p&gt;潜意识思维匹配模式，就是找到过去经验与当前状况最佳匹配。
潜意识思维偏重规则和结构，在正式场合使用会受限制。&lt;/p&gt;

&lt;h3 id=&quot;section-11&quot;&gt;人得认知和情感&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;本能层次&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;最基本的处理层次被称为本能&lt;/li&gt;
  &lt;li&gt;本能层次仅仅简单的评估周围的状况，不会探讨根源，没有责备，也没有表扬。&lt;/li&gt;
  &lt;li&gt;本能层次与身体的肌肉-运动系统紧密相连&lt;/li&gt;
  &lt;li&gt;本能反应是迅速的，完全是潜意识的。&lt;/li&gt;
  &lt;li&gt;事物的外在表现出发本能反应。 这与产品的可用性，有效性或者可理解性无关，只关于吸引或厌恶。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;行为层次&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;行为层次是学习能力之本。&lt;/li&gt;
  &lt;li&gt;对设计师来说，行为层次最重要，是要让每一个行动都与一个期望相关联。如果期待一个积极的结果，其结果就是一个积极的情感反应（正价反应），反之则是负价反应。&lt;/li&gt;
  &lt;li&gt;行为状态是可以习得的。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缺乏犯规会导致失控的感觉，这可能让人感到不安。 
反馈是管理预期的关键。犯规，即对结果的预知，是满足期望，学习和发展熟练行为的关键。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;反思层次&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;反思层次是有意识的认知之本。因此这是发展深层理解的地方。是产生推力和有意识决策的地方。&lt;/li&gt;
  &lt;li&gt;反思层次是认知的，有深度的缓慢的。&lt;/li&gt;
  &lt;li&gt;反思让我们评价某个产品，推荐给其他人使用，或者不建议使用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本能，行为，反思三个层次一起发挥作用。 行为层次是交互体验之本，也是所有基于期望的情感，即希望和喜悦挫折和愤怒之本。&lt;/p&gt;

&lt;p&gt;对实物的理解产生于行为和反思层次的结合。&lt;/p&gt;

&lt;p&gt;高层次的反思认知一颗出发低层次的情绪。低层次的情绪会引发更高层次的反思认知&lt;/p&gt;

&lt;h3 id=&quot;flow&quot;&gt;心流（Flow)&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;我们热衷于从事的活动&lt;/li&gt;
  &lt;li&gt;我们会专注一致的活动&lt;/li&gt;
  &lt;li&gt;有清楚目标的活动&lt;/li&gt;
  &lt;li&gt;有立即回馈的活动&lt;/li&gt;
  &lt;li&gt;我们对这项活动有主控感。&lt;/li&gt;
  &lt;li&gt;在从事活动时，我们的忧虑感会消失。&lt;/li&gt;
  &lt;li&gt;在活动时，主观的时间会改变。&lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;section-12&quot;&gt;自说自话&lt;/h3&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;概念模型是一种形式的故事来自我们习惯寻找解释的天性。&lt;/li&gt;
  &lt;li&gt;概念模型通常由零碎的事实结构，很了解所发生的事情，用一种天真的心理学来推断原因，机制的相互关系，即使有时候没有任何关联。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-13&quot;&gt;责备错误之事&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;人们试图发现事件发生的原因，当两件事情相继发生时，他们容易认为期间含有因果关系。&lt;/li&gt;
  &lt;li&gt;人们很自然的将自己的不幸归咎于周围环境，将别人的不幸归咎于他们的个性。&lt;/li&gt;
  &lt;li&gt;
    &lt;h4 id=&quot;learned-helplessness&quot;&gt;习得性无助(Learned helplessness)&lt;/h4&gt;
    &lt;p&gt;指人们在座某事时多次经历失败，便认为自己无法做好这件事情，结果陷入无助的状态。 
#### 积极心理学&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;经常失败，快速失败&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;当用户不能正确使用你的产品时，不要责怪他们&lt;/li&gt;
  &lt;li&gt;把用户遇到的困难当做产品改善的机会。&lt;/li&gt;
  &lt;li&gt;消除电子设备或计算机系统的所有错误信息，而不是提供帮助和指导。&lt;/li&gt;
  &lt;li&gt;直接从帮助和指导信息中纠正问题。让用户能继续使用产品：不要停步–帮助用户顺利，持续的使用。不要让用户重新开始。&lt;/li&gt;
  &lt;li&gt;假设用户所做的不完全是正确的，如果有部恰当的地方，提供指导，使他们能纠正问题，找到正确的方式。&lt;/li&gt;
  &lt;li&gt;面对你自己要和打交道的人，积极地思考。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-14&quot;&gt;不当的自责&lt;/h3&gt;
&lt;p&gt;消除“人为差错”这个词，取而代之的是谈论沟通和互动，我们所说的差错通常是不了的沟通或互动造成的。&lt;/p&gt;

&lt;h3 id=&quot;section-15&quot;&gt;七个基本的设计原则&lt;/h3&gt;
&lt;p&gt;行动的七个阶段提供的一个基本问题清单：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;想实现什么&lt;/li&gt;
  &lt;li&gt;可能替代的动作序列是什么&lt;/li&gt;
  &lt;li&gt;现在能做什么&lt;/li&gt;
  &lt;li&gt;该怎么做&lt;/li&gt;
  &lt;li&gt;出什么事了&lt;/li&gt;
  &lt;li&gt;这是什么意思&lt;/li&gt;
  &lt;li&gt;做好了么，已经达到目标了么&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;有助于回答执行类的信息叫前馈（feedforward),有助于理解发生了什么的信息叫做反馈（feedback)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;设计的基本原则：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;可视性： 让用户有机会确定哪些行动是合理的，以及呈现该设备的当前状态。&lt;/li&gt;
  &lt;li&gt;反馈：关于行动的后果，以及产品或服务当期那状态的充分和持续的信息。当执行了一个动作之后，很容易确定新的状态。&lt;/li&gt;
  &lt;li&gt;概念模型：设计传达所有必要的信息，创造一个良好的系统概念模型，引导用户理解系统状态，带来掌控感。概念模型同时包括可视性，和评估行动的结果。&lt;/li&gt;
  &lt;li&gt;示能： 设计合理的示能，让期望的行动能够实施。&lt;/li&gt;
  &lt;li&gt;意符： 有效使用意符确保可视性，并且很好的沟通和理解反馈。&lt;/li&gt;
  &lt;li&gt;映射： 使控制和控制结果之间的关系遵循良好的映射原则，尽可能的通过空间布局，和时间得连续来强化映射。&lt;/li&gt;
  &lt;li&gt;约束： 提供物理，逻辑，语义，文化的约束来指导行动，容易理解。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-16&quot;&gt;三，头脑中的知识与外界知识&lt;/h2&gt;

&lt;h3 id=&quot;section-17&quot;&gt;含糊的知识引导精确的行为&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;知识同时储存于头脑中和外部世界里。
脑海中的知识与外界信息的相互结合，决定了行为的方向。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;无需具备高度精确的知识。&lt;/li&gt;
  &lt;li&gt;外界存在自然约束条件。&lt;/li&gt;
  &lt;li&gt;头脑中有关于文化规范与习俗的知识。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;人类行为由内在（头脑）和外部知识与规范共同决定。&lt;/p&gt;

&lt;h3 id=&quot;section-18&quot;&gt;储存于外界的知识&lt;/h3&gt;

&lt;p&gt;一旦从事某项任务所需要的知识在外界垂手可得，学习这些信息的必要性就会大幅度的降低。
人们依赖两种类型的知识完成工作&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;是什么 –陈述性知识（declarative knowledge)(知识未必求真）&lt;/li&gt;
  &lt;li&gt;怎么做 –程序性知识(procedural knowledge)
程序性知识很难甚至不可能用文字表述清楚。最佳的学习方法是联系&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-19&quot;&gt;不需要高度精确的知识&lt;/h3&gt;
&lt;p&gt;通常人们在座判断时不需要精确的知识，人们所需要的是结合外界的与头脑中的知识来作清楚的决定。 
### 依靠约束简化记忆
约束因素本身并不能决定哪一种安装方法是对的，错误在所难免，但却能减轻学习负担。
###记忆的结构
&lt;strong&gt;短时记忆&lt;/strong&gt;
短时记忆或工作记忆储存的是当前最新的经验或思索内容，是刚产生的记忆。&lt;/p&gt;

&lt;p&gt;对短时记忆系统造成的约束来源于干扰任务，可以通过使用多种感官的方法来减轻。
为了最大先动的提高工作记忆的效率，最好用不同的模式呈现不同的信息，像视觉，触觉，听觉，空间位置以及手势等。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;长时记忆&lt;/strong&gt;
长时记忆储存的是过去的信息。 长时记忆的主要困难在于组织管理。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;随意的记忆&lt;/li&gt;
  &lt;li&gt;有意义的记忆&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-20&quot;&gt;近似模型：现实世界里的记忆&lt;/h3&gt;
&lt;p&gt;简化思想的一种方式及时使用简化的模型，即近似模拟事情的真实基本状态。 
科学探究真理，从而时间应对混沌。从业人员不需要真相，他们需要快速得到结果，即便这些结果不准确，只要可以应用，能到到目的就“足够好”。&lt;/p&gt;

&lt;p&gt;在真实的，现实的世界里，我们不需要绝对的真理：近似模式就工作的很好。 每个近似模型可能不对，但都有效的减轻了思维的负担，以便快速地得到结果，准确度“足够好”就行。&lt;/p&gt;

&lt;h3 id=&quot;section-21&quot;&gt;头脑中得知识&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;前瞻记忆（prospective memory)
记住在未来某个时间要从事的一些活动&lt;/li&gt;
  &lt;li&gt;未来记忆 (memory for the future)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;规划能力，想象未来的能力。&lt;/p&gt;

&lt;p&gt;提醒的两个层面：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;信号：有件事要记住&lt;/li&gt;
  &lt;li&gt;信息：这件事是什么
理想的提醒方法必须同时具备信号和信息两个方面，即有件事要记住和这件事是什么。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-22&quot;&gt;外界知识和头脑中的知识&lt;/h3&gt;

&lt;p&gt;储存于外界的知识具有自我提醒功能，它帮助我们回忆起容易遗忘的内容。 
存于头脑中得知识使用起来很搞笑，它无需外部环境进行查找和诠释。可是想要利用头脑中得知识我们必须先通过学习，才能将其储存在头脑中。&lt;/p&gt;

&lt;h3 id=&quot;section-23&quot;&gt;自然映射&lt;/h3&gt;
&lt;p&gt;自然映射是那些显而易见的映射关系，作用于控制与被控制对象之间。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;最佳映射：控制组件直接安装在被控制对象上&lt;/li&gt;
  &lt;li&gt;次好映射：控制组件尽量靠近被控制的对象&lt;/li&gt;
  &lt;li&gt;第三号的映射：控制组件与被控制对象的空间分布一致。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-24&quot;&gt;四， 知晓：约束，可视性和反馈&lt;/h2&gt;
&lt;p&gt;外部世界里的知识： 即使遇到一个从不熟悉的设备或状况，设计师如何提供重要的信息，一遍人们知道怎么操作。&lt;/p&gt;

&lt;p&gt;怎么做到呢： 将每一个零件的物理约束，与文化，语义或路基的约束因素综合考虑就行。&lt;/p&gt;

&lt;p&gt;比如拼装乐高玩具：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;物理限制约束了多种可能的安装位置。&lt;/li&gt;
  &lt;li&gt;文化和语义的约束提供了进一步确认的线索。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-25&quot;&gt;四种约束因素&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;四种约束因素： 物理结构，语义，文化，和逻辑。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;约束是非常有力的线索，限定了一系列可能的操作。在设计中有效使用约束因素，即使在全新的情境下，也能够让用户轻而易举的找到合适的操作方式。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;物理约束&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;物理结构上的局限性将可能的操作方法限定在一定的范围内。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;文化约束因素&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;每种文化都有一套社交行为准则。 
文化行为准则的范式(Schemas）也就是知识结构，由一般规则和信息组成。 主要用于诠释状况，指导人们的行为。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;语义约束
语义约束是指利用某种情况的特殊含义来限定可能的操作方法。&lt;/li&gt;
  &lt;li&gt;逻辑约束&lt;/li&gt;
  &lt;li&gt;文化规范，习俗和标准&lt;/li&gt;
  &lt;li&gt;习俗实际上是一种文化的约束，通常与人们的行为方式相联系&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;activity-centered-control&quot;&gt;以活动为中心的约束 (activity-centered control)&lt;/h3&gt;

&lt;p&gt;一个近似的错误的方法是以设备为中心的约束，当以设备为中心控制，就会有不同的控制屏去管理灯光，音响，电脑。。。&lt;/p&gt;

&lt;h3 id=&quot;section-26&quot;&gt;引导行为的约束力&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;强制功能
强制功能是一种物理约束，在行动受限的情况下，出现在某个阶段的差错不会蔓延，能防止产生进一步的后果。 
强制功能是较强的约束的极端情况，可以防止不当的行为。 
强制功能的其他形式：&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;互锁&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;互锁促使行动按照正确的次序进行。 比如微波炉和其他内部存在高电压设备，可防止有人在美断开电源的情况下打开炉门或拆卸设备。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;字锁&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;自锁保持一个操作停留的激活的状态，防止有人过早的停止操作。 例如： 计算机总中得提示功能，询问是否真的想要退出。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;反锁
相较于自锁是是某人待在一个空间，或在所需要操作完成前防止误操作，反锁则是防止某人进入那些危险区域，或者阻止事情的发生。&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;惯例&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在设计中保持一致性很有效，这意味着在一个系统中已经习惯的知识可以被轻而易举地带到另一个系统。 
总得来讲，应该遵守一致性。如果用新的方式做一件事只比原来好一点，那么最好与以前保持一致。如果必须做出改变，那么每个人都得改变。
新旧混杂的系统让每个人困惑。当新的做事方式明显优于旧的方式，那么因改变而带来的价值会超越本身所带来的困难。不能因为某样东西与众不同就认为它好。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;利用声音作为意符&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有时候并非每件物品都要被设计的可见。那就利用声音：没有其他方法时，声音能够提供有用的信息。 声音可以告诉我们产品的运转是否正常。&lt;/p&gt;

&lt;h2 id=&quot;section-27&quot;&gt;五， 人为差错？不，拙劣的设计&lt;/h2&gt;
&lt;p&gt;设计师能够很好的理解物理约束，但经常严重地误解心里的局限。我们应找到根本原因，重新设计系统，保证不再发生同样地问题。 
### 根本原因分析&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;詹姆斯.里森原则&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;通常会有多个事情出错，或者多个事件，只有要他们中得任何一个没有发生，就不会发生事故。
当发现人为差错可能是因素之一，我们应该继续分析并找到为什么会发生差错，可以做些什么防止它再次发生。&lt;/p&gt;

&lt;h3 id=&quot;section-28&quot;&gt;五个为什么&lt;/h3&gt;

&lt;p&gt;普遍存在这种倾向，一旦发现人为差错，就停止寻找深层次原因。&lt;/p&gt;

&lt;p&gt;“五个为什么”意味着寻找原因时，即使你已经找到了一个，不要停下来，要问问为什么是这个原因。&lt;/p&gt;

&lt;h3 id=&quot;section-29&quot;&gt;差错的两种类型： 失误，错误。&lt;/h3&gt;

&lt;p&gt;差错是所有错误行为的总称
&lt;strong&gt;失误：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当目标正确，但要求的行动没有合理地完成，就造成了失误，即执行有瑕疵。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;行动失误&lt;/li&gt;
  &lt;li&gt;记忆失效&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;失误的特性： 与新手相比，越是熟练的人失误越多，常见原因是注意力不集中。一些失误是由动作之间的相似性造成的。 
与设计相关的三类失误：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;撷取性失误(capture slips)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;指的是某个经常做的动作，或刚刚做过的动作突然取代了想要做的动作，即某个曾经的动作挤占了需要完成的动作。 
设计师要避免有相同的起始步骤，然后再发散的流程。 只要可能，应该从一开始就设计出不同的动作序列。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;描述相似性失误( description-similarity slips)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在描述性失误中，差错发生在目标相似的对象上。如果对目标面熟相当的含糊不清，就会发生描述相似性失误。 
 在设计不同目的的控制和显示设备时，设计师需要确认它们之间具有明显的差异。 看上去完全相同的开关或显示，一行行排列在意洽很容易导致描述相似性失误。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;记忆失效性失误&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;防止记忆失效引起的失误&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用最少的步骤&lt;/li&gt;
  &lt;li&gt;对需要完成的步骤提供生动有效的提醒。&lt;/li&gt;
  &lt;li&gt;强制功能。&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;功能状态失误 （mode errors)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当设备有不同状态，而相同的控件有不同的含义，就可能发生功能状态失误。 
设计者必须尽量避免模式控制的设计，如果必须这样做，则必须使设备能够明显地显示所激活的功能模式。 再者设计师必须经常设计出可以抵消干扰活动对已设定模式带来影响的系统。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;错误&lt;/strong&gt;
当目标和计划更本就不对，就会发生错误。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;违反规则&lt;/li&gt;
  &lt;li&gt;缺乏知识&lt;/li&gt;
  &lt;li&gt;记忆失效
设计师应该假设人们在行动中可能被打断，在恢复操作时他们可能需要帮助。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;失误是下意识地行为，却在中途出了问题。错误则产生于意识行为中。 意识行为让我们具有创造力和洞察力，能从表面上毫不相关的实物中看出它们的联系，并使我们更具部分正确的，甚至是错误的证据迅速得出正确的结论。&lt;/p&gt;

&lt;h3 id=&quot;section-30&quot;&gt;为差错设计&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;了解差错的更本原因，通过设计以尽量减少这些诱因。&lt;/li&gt;
  &lt;li&gt;进行合理性检验。检查操作行为是否能够通过“一般性常识“的测试？&lt;/li&gt;
  &lt;li&gt;设计出可以”撤销“操作的功能–“返回”以前操作，或者如果操作不能“返回”，则增加该操作的难度。&lt;/li&gt;
  &lt;li&gt;让人们易于发现一定会出的差错，以便容易纠正。&lt;/li&gt;
  &lt;li&gt;不要把操作看成是一种操作，相反，帮助操作者正确的完成动作。应该将操作文卫近似于预期目的。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;差错的信息确认：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使正确的操作对象更加现眼。改变正在操作的外观使其更加现眼：放大，或者改变颜色。&lt;/li&gt;
  &lt;li&gt;让操作可逆： 如果用户要保存内容，除了不厌其烦的再次打开要保存的文件，不能发生任何损失。如果用户选择不保存，系统能够秘密地保存内容，等到下次用户再打开文件时，询问是否恢复为最近的版本。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-31&quot;&gt;从差错到事故–瑞士奶酪模型&lt;/h3&gt;

&lt;p&gt;发生事故通常有多重因素，任何其中一个因素不出现，事故就不会发生。
我们应用一下几种方式减少事故：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;增加更多层的奶酪&lt;/li&gt;
  &lt;li&gt;减少孔洞的数量（或者让现有的孔更小一些）&lt;/li&gt;
  &lt;li&gt;如果一些孔洞将要排成一线，提醒操作者。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-32&quot;&gt;应对差错的设计原则&lt;/h3&gt;
&lt;p&gt;我们所说的“认为差错” 往往只是一种人类特性与技术需求不相符的行动。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;将所需的操作只是储存在外部世界，而不是全部储存在人的头脑里，但是如果用户已经把操作步骤熟记在心，应该能够提高操作的效率。&lt;/li&gt;
  &lt;li&gt;利用自然和非自然的约束因素，例如物理约束，逻辑约束，语义约束和文化约束，利用强迫性工恩呢刚和自然匹配的原则。&lt;/li&gt;
  &lt;li&gt;缩小动作执行阶段和评估阶段的鸿沟。 在执行方面，要让用户很容易看到哪些操作是可行的。在评估方面，要把每一个操作的结果显示出来，使用户能够方便，迅速，准确地判系统的工作状态。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-33&quot;&gt;六， 设计思维&lt;/h2&gt;
&lt;p&gt;在现实世界里，问题不会像学习材料上的那样亲切友好，干净整洁的来到你面前。你需要探究问题的来源。你仅仅看到表面现象，从不深究真正的问题所在，这样就太容易了。&lt;/p&gt;

&lt;h3 id=&quot;section-34&quot;&gt;解决真正的问题&lt;/h3&gt;
&lt;p&gt;设计师拿到一个问题，应首先发散式思考，而不是聚焦于解决问题，先做用户研究，搞清楚要实现什么，产生一个又一个新的点子。&lt;/p&gt;

&lt;h3 id=&quot;section-35&quot;&gt;设计思维的两大工具：以人为本的设计思想，双钻（发散-聚焦）设计模式。&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;双钻设计模式&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;设计的过程：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“发现”&amp;amp;“定义”确认正确问题的发散和聚焦阶段。&lt;/li&gt;
  &lt;li&gt;“开发”&amp;amp;“交付”制定正确方案的发散和聚焦阶段。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.以人为本的设计流程&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;找到正确的问题&lt;/li&gt;
  &lt;li&gt;满足用户需求。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以人为本设计流程的四个步骤&lt;/p&gt;

&lt;p&gt;1） 观察&lt;/p&gt;

&lt;p&gt;2） 激发创意&lt;/p&gt;

&lt;p&gt;3） 打样&lt;/p&gt;

&lt;p&gt;4） 测试&lt;/p&gt;

&lt;p&gt;观察潜在目标人群，激发创意，然后测试。不断循环这个过程，直到满意为止。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;观察&lt;/strong&gt;
客户研究非常关键的一点就是观察目标用户的行为，在自然状态下，在他们的日常生活中，以及正在设计的产品或服务将来实际应用的场合。 
调研对象应当与潜在用户一致。 
设计调研：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;找出正确的问题，要求深入了解用户的真实需求。&lt;/li&gt;
  &lt;li&gt;深入了解潜在用户群的行为方式。
设计调研与市场调查&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;一个成功产品的需求：&lt;/p&gt;

&lt;p&gt;如果没有人买它，那么一切都没有意义。产品设计必须提供影响用户购买决定的所有要素。&lt;/p&gt;

&lt;p&gt;一旦用户购买的产品，开始使用，产品应该能满足用户的真实需求，人们才会使用和了解。&lt;/p&gt;

&lt;p&gt;设计规范必须包括所有这些要素：市场和设计，购买和使用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;激发创意（idea generation)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;激发足够数量的创意。&lt;/li&gt;
  &lt;li&gt;创意，不要受限制。避免批评任何的电子。&lt;/li&gt;
  &lt;li&gt;质疑每一件事。愚蠢的问题可能会触及事情的本质。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;打样&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;想知道一个穿衣是否合理，唯一的方法就是侧hi。 对每一个可能的解决方案制作快速模型或实物模型。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;测试&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;重复&lt;/strong&gt;
以人为本的设计原则中，重负能够促使设计持续的改进和加强。&lt;/p&gt;

&lt;h3 id=&quot;section-36&quot;&gt;以活动为中心的设计和以人为本的设计&lt;/h3&gt;

&lt;p&gt;Activity-centered design
让操作方式来定义产品和结构，一句操作的概念模型来建立产品的概念模型。
以活动为中心的设计就是以人为本的设计思路，尤其适用于大量的各种各样的目标人群。&lt;/p&gt;

&lt;h3 id=&quot;section-37&quot;&gt;任务和活动的区别&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;任务&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;一项活动通常包含一系列的任务，但所有的任务都向着一个共同的目标，更高层次的目标。
任务是有组织的，紧密结合的一系列操作。
良好的设计的设备，能够将支持任务所需要的各种各样的活动，整合在一起，做到彼此无缝过度，确保为某一个任务所进行的工作不会影响到另外一个任务。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;活动&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;活动是分等级的。高层次的活动可以被分解成置于其下得无数低层次的活动。
低层次的活动会产生大量的“任务”，这些任务最终被基本的“操作”来执行。&lt;/p&gt;

&lt;h3 id=&quot;section-38&quot;&gt;循环往复的设计流程与线性流程&lt;/h3&gt;

&lt;p&gt;结合两个流程的长处：循环往复的提炼问题，改善方案，在流程的关口处结合阶段评审。
延迟对产品需求进行精确定义，知道对快速样品的反复测试结束，同时保持对时间计划，预算和质量进行严格控制。&lt;/p&gt;

&lt;h3 id=&quot;section-39&quot;&gt;为特殊人群设计&lt;/h3&gt;

&lt;p&gt;为特殊人群设计通常称作“和合设计”（inclusive design) or “普遍设计”（universial design)
这种设计通常会让每个人都受益。&lt;/p&gt;

&lt;h3 id=&quot;section-40&quot;&gt;复杂是好事，混乱惹麻烦&lt;/h3&gt;

&lt;p&gt;复杂擦能让我们应对所参与的行动，繁杂性，可以说成“混乱”。如何才能避免混乱才是设计师发挥技巧的舞台。&lt;/p&gt;

&lt;h3 id=&quot;section-41&quot;&gt;标准化和技术。&lt;/h3&gt;

&lt;p&gt;产品的改良来自技术的自然演变，有时则来自产品的标准化（eg:汽车）
标准化你的生活会简单，每个人只需要学习一次，标准化要掌握实际，不能过早进行标准化，否则你可能会被禁锢在不成熟的技术之中。&lt;/p&gt;

&lt;h3 id=&quot;section-42&quot;&gt;故意制造困难&lt;/h3&gt;

&lt;p&gt;我们有时候必须忽视优良设计的原则，否则那些用户保密的产品就会丧失其存在的价值。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;这类物品并没有完全排斥易用性，设计人员通常把物品的某一部分设计的很难使用。&lt;/li&gt;
  &lt;li&gt;即便要增加使用某类物品的难度，也要让用户知道如何操作。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-43&quot;&gt;七，全球商业化中的设计&lt;/h2&gt;

&lt;h3 id=&quot;section-44&quot;&gt;在真空中进行以人为本的设计&lt;/h3&gt;
&lt;p&gt;不考虑真实世界中的竞争，成本和时间。&lt;/p&gt;

&lt;h3 id=&quot;section-45&quot;&gt;影响产品开发的过程：&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;功能主义(featuritis)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;现有的用户喜欢这个产品，但表达愿望–希望更多的特色，功能，性能&lt;/li&gt;
  &lt;li&gt;一个处于竞争中得公司，正在给自己的产品增加新功能，给竞争对手带来更多的竞争压力，单页给公司在竞争中领先提供优势&lt;/li&gt;
  &lt;li&gt;用户很满意，单销售在下降，因为市场在饱和：每个想要的人已经拥有了它。是时候加强它的功能，增加一点亮点，这样能够吸引用户购买新的型号，升级旧版产品。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;功能蔓延（creeping featurism)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;优秀的产品设计需要从竞争的压力中抽身出来，确保整个产品风格一致，结构明晰，易于学习。&lt;/p&gt;

&lt;h3 id=&quot;section-46&quot;&gt;产品创新与设计的两种形式&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;渐进式创新 – 登山法（hill climbing)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;渐进式创新从现有的产品开始，使之更加完善。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;颠覆式创新&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;颠覆式创新则是全新的，经常来自能够衍生新功能的新技术。&lt;/p&gt;

&lt;p&gt;颠覆式创新在改变着我们的生活和行业，渐进式创新让产品更完善。&lt;/p&gt;

&lt;h3 id=&quot;section-47&quot;&gt;竞争压力&lt;/h3&gt;

&lt;p&gt;价格&amp;gt;功能&amp;gt;质量&lt;/p&gt;

&lt;h3 id=&quot;section-48&quot;&gt;从想法变成产品需要很长的时间&lt;/h3&gt;
&lt;p&gt;科技发展迅速，但人类和文化在缓慢改变。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;只有当最终产品成功，设计才是成功的，产品成功意味着人们购买产品，使用它，分享他，然后传播到全世界。人们不肯购买产品就是失败的设计，无论设计团队认为它又多么的出色。&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;这篇读书笔记从9月4号断断续续的写道现在才完成。 在整理的过程中，可以更加全面宏观的去看整本书。 
这亦可以拿来做检索。&lt;/p&gt;

</description>
        <pubDate>Sat, 03 Oct 2015 20:12:12 +0800</pubDate>
        <link>http://pandaqr.github.io/2015/10/03/%E8%AE%BE%E8%AE%A1%E5%BF%83%E7%90%86%E5%AD%A6-%E7%AC%94%E8%AE%B0.html</link>
        <guid isPermaLink="true">http://pandaqr.github.io/2015/10/03/%E8%AE%BE%E8%AE%A1%E5%BF%83%E7%90%86%E5%AD%A6-%E7%AC%94%E8%AE%B0.html</guid>
        
        
      </item>
    
      <item>
        <title>黑客与画家</title>
        <description>&lt;p&gt;恩，我觉着情人节的午后就得晒着太阳在家里喝着柠檬水，敲着字，记录一些有的无的。 
书名&lt;a href=&quot;http://book.douban.com/subject/6021440/&quot;&gt;《黑客与画家》&lt;/a&gt;
此文仅记录文中让我觉有有趣的思想片段。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;黑客：&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;所谓黑客：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）指精通计算机技术，善于从互联网中发现漏洞并提出改进措施的人。&lt;/p&gt;

&lt;p&gt;（2）指通过互联网非法侵入他人计算机系统查看，更改，窃取保密数据或干扰计算机程序的人&lt;/p&gt;

&lt;p&gt;–Kindle里中文字典对”黑客”的定义。&lt;/p&gt;

&lt;p&gt;显然大部分人得以为黑客都是第二个意思。 那如果你也是这么以为的， 有空就看看这本书吧。有许多有趣的思想，我想不仅仅是程序员必读的书，可能不管你是干嘛的，有空都可以看看~
黑客不是科学家，数学家，工程师，是 设计软件的。
黑客与画家的共同之处： 创作者。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;创作者的学习途径&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1）通过实践学习&lt;/p&gt;

&lt;p&gt;2）通过范例&lt;/p&gt;

&lt;p&gt;坚持一丝不苟，就能取得优秀的成果。因为看不见的细节累加起来，就变得可见了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;共同合作&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;学会换位思考&lt;/strong&gt;
判断一个人是否具有“换位思考”的能力有一个好办法，那就是看他怎样向没有技术背景的人解释技术问题。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;书呆子：&lt;/h2&gt;

&lt;p&gt;没有什么比一个共同的敌人更能使得人们团结起来了
真实世界的关键并非在于它是由成年人组成的，而在于它的庞大规模使得你做的每件事都能产生真正意义上的效果。&lt;/p&gt;

&lt;p&gt;以前的青少年也似乎更尊敬成年人，因为成年人都是看得见的专家，会传授他们所需要学习的技能。如今的大多数青少年，对他们的家长在遥远的办公室所从事的工作几乎一无所知。他们看不到学校作业与未来走上社会后从事的工作有何联系。&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;不能说的话：&lt;/h2&gt;
&lt;p&gt;凡是不认同社会之处，你连想都不敢想，马上就放弃自己的观点，那才会真正出问题。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;找出“不能说的话”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1）当你发现某些言论很可疑时，你可以这样想，那些话听上去真是大逆不道，但是有没有可能是真的？&lt;/p&gt;

&lt;p&gt;2）有些想法，纯碎因为非常特别，而不能说出口。&lt;/p&gt;

&lt;p&gt;关注极端言论（异端邪说）。
关注标签： 比如，有一个标签叫做“性别歧视”。问自己哪些想法属于性别歧视，然后把闹钟跳出来的想法按照先后顺序列出来，再逐个追问，他们真的属于性别歧视吗？&lt;/p&gt;

&lt;p&gt;3）时空差异&lt;/p&gt;

&lt;p&gt;回顾过去，我们可以去找那些过去被认为理所当然，如今被认为不可思议的事情，这是用来找出我们自己正在犯下的错误的第三种方法。&lt;/p&gt;

&lt;p&gt;将当代观念与不同时期的古代观念diff一下。&lt;/p&gt;

&lt;p&gt;4）道貌岸然&lt;/p&gt;

&lt;p&gt;寻找那些一本正经的卫道者，看看他们到底在捍卫着什么。&lt;/p&gt;

&lt;p&gt;5）机制&lt;/p&gt;

&lt;p&gt;观察流行的产生方式，试着预测他回禁止哪些话。
观察禁忌是如何产生的。某种道德观念是怎么出现的，有时怎么被他们接受的？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;优秀的作品往往来自于其他人忽视的想法，而最被忽视的想法就是那些被禁止的思想观点&lt;/strong&gt;
发现“不能说的话”下一步：
挑选合适的场合再说，只打那些值得打的仗。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;永远质疑&lt;/strong&gt;
如果你想要清晰的思考，就必须远离人群。&lt;/p&gt;

&lt;h2 id=&quot;section-3&quot;&gt;打破常规&lt;/h2&gt;
&lt;p&gt;只有深入了解当前的技术，黑客才能构想下一代技术。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;公民自由是国家富强的原因而不是结果。&lt;/strong&gt;
公民自由不仅仅是社会制度的装饰品，或者一种很古老的传统。公民自由使得国家富强。
人均国民生产总值与公民自由成正相关。
随着对公民自由的限制不断上升，政府的流量会先增加后减小。&lt;/p&gt;

&lt;h2 id=&quot;section-4&quot;&gt;创造财富&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;创业&lt;/strong&gt;
从经济学观点看，你可以把创业想象成一个压缩过程，你的所有工作年份被压缩成了短短几年。 你不再是低强度地工作四十年，而是以极限强度工作四年。在高技术领域，这种压缩的回报尤其丰厚，共工作效率越高，额外报酬就越高。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;财富&lt;/strong&gt; 
创造有价值的东西就是创造财富。 
财富是最基本的东西（食品，服装，住房etc) 
财富才是你的目标，金钱不是。 
金钱是财富的一种简便的表达方式：金钱有点像流动的财富，两者往往可以互相转化。 
金钱其实只是一种中介，让大家可以更方便获得自己想要的东西。大多数生意的目的是为了创造财富，做出人们真正需要的东西。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;大饼谬论&lt;/strong&gt;
大多数情况下，世界上可供交换的财富不是恒定不变的量。人类历史上德财富i在不停的增长和会面。
最可能明白财富能被创造出来的人就是那些善于制作东西的人，也就是手工艺人。
公司就是许多人聚在一起创造财富的地方，能够制造更多人们需要的东西。 
财富是被做出来的，而不是某个想象出来的大饼。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;工作&lt;/strong&gt;
真正重要的是做出人们需要的东西，而不是加入某个公司。&lt;/p&gt;

&lt;p&gt;1）可测量性和可放大性：&lt;/p&gt;

&lt;p&gt;可测量性：你的职位产生的业绩，应该是可测量的。 
可放大性：你做出的决定能够产生巨大的效应。&lt;/p&gt;

&lt;p&gt;2）小团体=可测量性&lt;/p&gt;

&lt;p&gt;团队越大，每个人得贡献就越接近于整体的平均值。&lt;/p&gt;

&lt;p&gt;3）高科技=可放大性&lt;/p&gt;

&lt;p&gt;技术就是某种手段，就是我们做事的方式
如果你发现了一种做事的信访室，他的经济价值就取决于有多少人使用这种新方式。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如果你又两个选择，就选较难得那个&lt;/strong&gt;
缓慢工作的后果不仅是延迟了技术革新，而且很可能会扼杀技术革新。 
只有在快速获得巨大利益的激励下，你才会去挑战那些困难的问题。否则你根本不愿意去碰它们。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;技术使得生产率扩大是一种健康的信号，如果这种扩大没有反映在收入上，只有三种可能的解释：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1）技术革新停顿了&lt;/p&gt;

&lt;p&gt;2）那些创造大部分财富的人停止工作了&lt;/p&gt;

&lt;p&gt;3）创造财富的人没有获得报酬&lt;/p&gt;

&lt;h2 id=&quot;section-5&quot;&gt;设计&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;好的设计是简单的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;当你被迫把东西做的简单时，你就被迫直接面对真正的问题&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是永不过时的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是解决主要问题的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是启发性的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计通常是有点趣味性的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是艰苦的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是看似容易的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是对称的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是模仿大自然的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是一种再设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是能够复制的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计常常是奇特的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计是成批出现的&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;好设计常常是大胆的设计&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;最后： 
这本书后面小半部分概括起来就是–你学不学Lisp，学不学，学学学学不学Lisp,学了Lisp你就厉害了。
我这个外行人就暂且不凑热闹了。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;section-6&quot;&gt;瞎扯&lt;/h2&gt;
&lt;p&gt;写到这，发现其实这只是普通到不能再普通的读书笔记罢了。 没想到，写这么一个读书笔记（特别是这种摘录式的）比自己写一篇文章还要累人。&lt;/p&gt;

&lt;p&gt;写之前，脑袋里模模糊糊的塞满了所有让我欣喜的思想。&lt;/p&gt;

&lt;p&gt;比如，看完之后，我总在想，为毛老子没有在大学的时候看到这本书啊，只要第一章和第六七章就够了！！&lt;/p&gt;

&lt;p&gt;第一章充分的解释了为什么现在的大学生毕业了还极度迷茫，甚至在工作了两三年后，还是对未来没有个方向。&lt;/p&gt;

&lt;p&gt;现代的教育制度似乎隔绝了我们接触社会的机会，就像文中说的，以前孩子们可以直接看到成人们的工作， 知道成人们成天忙忙碌碌在做些什么，或是锄地，或是修钟表，似乎整个世界都是展开在他们面前的。&lt;/p&gt;

&lt;p&gt;而现在的学校似乎就是成人们寄托孩子的地方，我们对外面的世界似乎无从认知。&lt;/p&gt;

&lt;p&gt;又或者说还是我自己太不争气。 可能如果回到大学，我会对自己说一句，快滚去找实习，任何实习工作都可以！&lt;/p&gt;

&lt;p&gt;做这种笔记的摘录有时候会觉着这句话有道理，快记下来，那句话也有道理，快写下来。 写的少了又怕断章取义。有时候又怕自己为了偷工减料，而只能一字一句的将原话照抄。结果就只差把整本书再写一遍了。&lt;/p&gt;

&lt;p&gt;其实，书摘这玩意儿也是挺私人的，管别人有没有看得断章取义，只要自己明白就行。
但不管怎样，书还是好的，有空多读书。&lt;/p&gt;

</description>
        <pubDate>Sat, 14 Feb 2015 23:28:12 +0800</pubDate>
        <link>http://pandaqr.github.io/2015/02/14/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6.html</link>
        <guid isPermaLink="true">http://pandaqr.github.io/2015/02/14/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6.html</guid>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 05 Dec 2014 04:14:47 +0800</pubDate>
        <link>http://pandaqr.github.io/jekyll/update/2014/12/05/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://pandaqr.github.io/jekyll/update/2014/12/05/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
